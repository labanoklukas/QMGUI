{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nexport default function geoLocation() {\n  _s();\n  const [locationData, setLocationData] = useState(null);\n  useEffect(() => {\n    getLocation();\n  }, []);\n  async function getLocation() {\n    const res = await axios.get(\"http://ip-api.com/json\");\n    console.log(res);\n    if (res.status === 200) setLocationData(res.data);\n  }\n  return {\n    city: locationData === null || locationData === void 0 ? void 0 : locationData.city,\n    country: locationData === null || locationData === void 0 ? void 0 : locationData.country,\n    countryCode: locationData === null || locationData === void 0 ? void 0 : locationData.countryCode,\n    lat: locationData === null || locationData === void 0 ? void 0 : locationData.lat,\n    lon: locationData === null || locationData === void 0 ? void 0 : locationData.lon,\n    region: locationData === null || locationData === void 0 ? void 0 : locationData.regionName,\n    regionCode: locationData === null || locationData === void 0 ? void 0 : locationData.region,\n    timezone: locationData === null || locationData === void 0 ? void 0 : locationData.timezone,\n    zip: locationData === null || locationData === void 0 ? void 0 : locationData.zip\n  };\n}\n_s(geoLocation, \"JYF7+WzDVHSio/zktKgu2f+Vnnk=\");","map":{"version":3,"names":["axios","useEffect","useState","geoLocation","_s","locationData","setLocationData","getLocation","res","get","console","log","status","data","city","country","countryCode","lat","lon","region","regionName","regionCode","timezone","zip"],"sources":["C:/Users/billi/Main/GitRepositories/QMGUI/src/geoLocation/geoLocation.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function geoLocation() {\r\n    const [locationData, setLocationData] = useState(null)\r\n    useEffect(() => {\r\n        getLocation();\r\n    }, []);\r\n\r\n    async function getLocation() {\r\n        const res = await axios.get(\"http://ip-api.com/json\");\r\n        console.log(res);\r\n        if (res.status === 200)\r\n            setLocationData(res.data)\r\n    }\r\n\r\n    return {\r\n        city: locationData?.city,\r\n        country: locationData?.country,\r\n        countryCode: locationData?.countryCode,\r\n        lat: locationData?.lat,\r\n        lon: locationData?.lon,\r\n        region: locationData?.regionName,\r\n        regionCode: locationData?.region,\r\n        timezone: locationData?.timezone,\r\n        zip: locationData?.zip\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtDD,SAAS,CAAC,MAAM;IACZM,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,WAAWA,CAAA,EAAG;IACzB,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,wBAAwB,CAAC;IACrDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,IAAIA,GAAG,CAACI,MAAM,KAAK,GAAG,EAClBN,eAAe,CAACE,GAAG,CAACK,IAAI,CAAC;EACjC;EAEA,OAAO;IACHC,IAAI,EAAET,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAES,IAAI;IACxBC,OAAO,EAAEV,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEU,OAAO;IAC9BC,WAAW,EAAEX,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEW,WAAW;IACtCC,GAAG,EAAEZ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEY,GAAG;IACtBC,GAAG,EAAEb,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEa,GAAG;IACtBC,MAAM,EAAEd,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEe,UAAU;IAChCC,UAAU,EAAEhB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEc,MAAM;IAChCG,QAAQ,EAAEjB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEiB,QAAQ;IAChCC,GAAG,EAAElB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEkB;EACvB,CAAC;AACL;AAACnB,EAAA,CAxBuBD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}